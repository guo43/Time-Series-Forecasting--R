install.packages(fpp2)
library(fpp2)
install.packages(fpp2)
load(fpp2)
install.packages("fpp2")
library("fpp2")
melsyd.head()
print(melsyd)
install.packages("ggplot2")
library("fpp2)
autoplot(melsyd[,"Economy.Class])
autoplot(melsyd[,"Economy.Class"])
autoplot(melsyd[,"Economy.Class"])
library("ggplot2", lib.loc="~/anaconda3/lib/R/library")
install.packages("fpp2")
library("fpp2")
install.packages(c("BH", "bindr", "bindrcpp", "bit", "blob", "broom", "callr", "caret", "caTools", "clipr", "cluster", "config", "curl", "CVST", "data.table", "DBI", "dbplyr", "ddalpha", "digest", "dplyr", "DRR", "evaluate", "forcats", "foreign", "ggplot2", "glmnet", "glue", "haven", "hexbin", "highr", "hms", "htmlwidgets", "httpuv", "IRdisplay", "iterators", "kernlab", "knitr", "lava", "lubridate", "maps", "MASS", "Matrix", "mgcv", "miniUI", "modelr", "mongolite", "munsell", "nlme", "odbc", "openssl", "packrat", "pbdZMQ", "pillar", "plogr", "prodlim", "profvis", "psych", "purrr", "quantmod", "randomForest", "Rcpp", "RcppRoll", "RCurl", "readxl", "recipes", "repr", "reprex", "rJava", "RJDBC", "rlang", "rmarkdown", "robustbase", "rpart", "rprojroot", "rsconnect", "selectr", "sfsmisc", "shiny", "sourcetools", "sparklyr", "stringi", "stringr", "survival", "tibble", "tidyr", "tidyselect", "timeDate", "TTR", "utf8", "viridisLite", "withr", "xml2", "xts", "yaml", "zoo"))
install.packages(c("httpuv", "maps", "openssl", "pbdZMQ", "RCurl", "rJava", "shiny", "stringi", "stringr"))
install.packages(c("httpuv", "maps", "openssl", "pbdZMQ", "RCurl", "rJava", "shiny", "stringi", "stringr"))
install.packages(c("httpuv", "maps", "openssl", "pbdZMQ", "RCurl", "rJava", "shiny", "stringi", "stringr"))
install.packages("fpp2")
library("fpp2")
library(fpp2)
install.packages(fpp2)
install.packages("fpp2")
install.packages("fpp2")
library(fpp2)
install.packages(c("foreign", "survival"))
install.packages("fpp2")
plot(cars)
library(fpp2)
melsyd.head()
head(melsyd)
head(melsyd$Economy.class)
head(melsyd)
library(fpp2)
head(melsyd)
library(fpp2)
head(melsyd)
head(a10)
a10
help("ggseasonplot")
help("ggseasonplot")
library(fpp2)
autoplot(elecdemand[,c("Demand","Temperature")])
autoplot(elecdemand[,c("Demand","Temperature")],facets=TRUE)
autoplot(elecdemand[,c("Demand","Temperature")],facets=FALSE)
help("autoplot")
help("autoplot")
help(facets)
??facets
autoplot(elecdemand[,c("Demand","Temperature")],facets=FALSE) +
ylab("")
autoplot(elecdemand[,c("Demand","Temperature")],facets=TRUE) +
ylab("")
autoplot(elecdemand[,c("Demand","Temperature")],facets=TRUE) +
autoplot(elecdemand[,c("Demand","Temperature")],facets=TRUE)
library(fpp2)
library(fpp2)
library(fpp2)
head(milk)
milk
monthdays(milk)
head(ausbeer)
??tslm
heap(tslm)
help(tslm)
library(fpp2)
library(fpp2)
head
head(visnights)
install(dplyr)
install.packages("dplyr")
install.packages("hflights")
library(hflights)
library(dplyr)
library(dplyr)
library(fpp2)
library(dplyr)
library(fpp2)
getwd()
setwd("/Users/qingguo/Desktop")
setwd("/Users/qingguo/Desktop")
getwd()
setwd("/Users/qingguo/Desktop")
sales_data = read.csv(sales_train.csv)
setwd("/Users/qingguo/Desktop/1C_Company")
sales_data = read.csv("sales_train.csv"")
setwd("/Users/qingguo/Desktop/1C_Company")
mydata = read.csv("sales_train.csv"")
setwd("/Users/qingguo/Desktop/1C_Company")
mydata = read.csv2("sales_train.csv"")
setwd("/Users/qingguo/Desktop/1C_Company")
mydata = read.csv("sales_train.csv"")
setwd("/Users/qingguo/Desktop/1C_Company")
getwd()
setwd("/Users/qingguo/Desktop/1C_Company")
getwd()
lwd()
setwd("/Users/qingguo/Desktop/1C_Company")
getwd()
list.files(getwd())
setwd("/Users/qingguo/Desktop/1C_Company")
getwd()
list.files(getwd())
mydata = read.csv("sales_train.csv")
setwd("/Users/qingguo/Desktop/1C_Company")
mydata = read.csv("sales_train.csv")
head(mydata)
